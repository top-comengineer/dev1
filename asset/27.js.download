(function(window){'use strict';// class helper functions from bonzo https://github.com/ded/bonzo function classReg(className){return new RegExp("(^|\\s+)" + className + "(\\s+|$)")}// classList support for class management // altho to be fair,the api sucks because it won't accept multiple classes at once
    var hasClass, addClass, removeClass;

    if ( 'classList' in document.documentElement ) {
        hasClass = function( elem, c ) {
            return elem.classList.contains( c );
        };
        addClass = function( elem, c ) {
            elem.classList.add( c );
        };
        removeClass = function( elem, c ) {
            elem.classList.remove( c );
        };
    }
    else {
        hasClass = function( elem, c ) {
            return classReg( c ).test( elem.className );
        };
        addClass = function( elem, c ) {
            if ( !hasClass( elem, c ) ) {
                elem.className = elem.className + ' ' + c;
            }
        };
        removeClass = function( elem, c ) {
            elem.className = elem.className.replace( classReg( c ), ' ' );
        };
    }

    function toggleClass( elem, c ) {
        var fn = hasClass( elem, c ) ? removeClass : addClass;
        fn( elem, c );
    }

    var classie = {
        // full names
        hasClass: hasClass,
        addClass: addClass,
        removeClass: removeClass,
        toggleClass: toggleClass,
        // short names
        has: hasClass,
        add: addClass,
        remove: removeClass,
        toggle: toggleClass
    };

// transport
    if ( typeof define === 'function' && define.amd ) {
        // AMD
        define( classie );
    } else {
        // browser global
        window.classie = classie;
    }

})( window );



$(document).ready(function(){
    var checkedPost = false;
    function checkValidity(event, form = false){
        var cleanedInput = $('#inpPostcode').val().replace(/[^\w\s]/gi, '');
        const checkPost = /^[A-Z]{1,2}[0-9]{1,2}[A-Z]{0,1} ?[0-9][A-Z]{2}$/i;
        if(checkPost.test(cleanedInput)) {
            $('.getquote').addClass('disabled');
            $('.getquote').text('finding...');
            $('.loadingtext').html('');
            $.ajax({
                dataType: "json",
                url: 'https://api.postcodes.io/postcodes/' + cleanedInput,
                xhrFields: {
                    withCredentials: false
                },
                success: function (data) {
                    $('.getquote').removeClass('disabled');
                    $('.getquote').text('Get Quote');
                    $('#quote-form').unbind('submit');
                    checkedPost = true;
                },
                error: function (data) {
                    $('.loadingtext').html('Postcode Not Found!');
                    $('.getquote').text('Get Quote');
                    $('#quote-form').bind('submit',function(e){e.preventDefault();});
                    checkedPost = false;
                }
            });
            if(form){
                return true
            }
        }else{
            $('.getquote').addClass('disabled');
            if(form){
                return false
            }
        }
    }

    $('#quote-form').submit(function(e){
        checkValidity(e, true);
    });
    $('#inpPostcode').keyup(function(e){
        checkValidity(e);
    });

    $('.faq h3').click(function () {
        $(this).toggleClass('active');
        $(this).next('p').slideToggle('fast');
    });

});


(function() {

    var bodyEl = document.body,
        content = document.querySelector( '.content-wrap' ),
        openbtn = document.getElementById( 'open-button' ),
        closebtn = document.getElementById( 'close-button' ),
        isOpen = false;

    function init() {
        initEvents();
    }

    function initEvents() {
        openbtn.addEventListener( 'click', toggleMenu );
        if( closebtn ) {
            closebtn.addEventListener( 'click', toggleMenu );
        }

        // close the menu element if the target itÂ´s not the menu element or one of its descendants..
        content.addEventListener( 'click', function(ev) {
            var target = ev.target;
            if( isOpen && target !== openbtn ) {
                toggleMenu();
            }
        } );
    }

    function toggleMenu() {
        if( isOpen ) {
            classie.remove( bodyEl, 'show-menu' );
        }
        else {
            classie.add( bodyEl, 'show-menu' );
        }
        isOpen = !isOpen;
    }

    init();

})();


function hideBlocks(){
    $('.whyusecontent').hide();
}

$('.unoblock').hover(function(){
    hideBlocks();
    $('.uno').show();
});
$('.dosblock').hover(function(){
    hideBlocks();
    $('.dos').show();
});
$('.tresblock').hover(function(){
    hideBlocks();
    $('.tres').show();
});
$('.quatblock').hover(function(){
    hideBlocks();
    $('.quat').show();
});


$(document).ready(function() {
    $('a.read-more').click((e)=> {
       e.preventDefault();
       let readMoreLink = $(e.target);
       let nextHiddenText = readMoreLink.next('.hidden-text');

       if(readMoreLink.text() === 'Read More') {
           readMoreLink.text('Hide Text');
       } else {
           readMoreLink.text('Read More')}nextHiddenText.slideToggle()})});